version: "3"
services:
  binance-ticker:
    container_name: binance-ticker
    build:
      context: .
      dockerfile: ticker/Dockerfile
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
      RABBITMQ_EXCHANGE: ${RABBITMQ_EXCHANGE}
      RABBITMQ_LOGS: ${RABBITMQ_LOGS}
    volumes:
      - ./ticker:/ticker
      - ./infra:/infra
    restart: always
    ports:
      - "6000:6000"
    networks:
      - proxynet
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./backend:/backend
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
      RABBITMQ_EXCHANGE: ${RABBITMQ_EXCHANGE}
      RABBITMQ_LOGS: ${RABBITMQ_LOGS}
    restart: always
    ports:
     - "8000:8000"
    networks:
      - proxynet
  # engine:
  #   container_name: engine
  #   build:
  #     context: .
  #     dockerfile: engine/Dockerfile
  #   environment:
  #     RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
  #     RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
  #     RABBITMQ_HOST: ${RABBITMQ_HOST}
  #     RABBITMQ_VHOST: ${RABBITMQ_VHOST}
  #     RABBITMQ_PORT: ${RABBITMQ_PORT}
  #     RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
  #     RABBITMQ_EXCHANGE: ${RABBITMQ_EXCHANGE}
  #     DISPLAY: $DISPLAY
  #   volumes:
  #     - ./engine:/engine
  #   restart: always
  #   ports:
  #    - "4000:4000"
  #   networks:
  #     - proxynet
  # frontend:
  #   container_name: frontend
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./frontend:/app
  #   ports:
  #     - "3000:80"
  #   environment:
  #     PORT: ${PORT}
  #     NODE_ENV: ${NODE_ENV}
  #     REACT_APP_BASE_URL: ${REACT_APP_BASE_URL}
  #   networks:
  #     - proxynet
  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
      REACT_APP_BASE_URL: ${REACT_APP_BASE_URL}
      RABBITMQ_LOGS: ${RABBITMQ_LOGS}
    # volumes:
    #   - ./ticker/rabbitmq.config:/etc/rabbitmq/rabbitmq.config
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - proxynet
  # crypto-db:
  #   image: "postgres:13.2-alpine"
  #   restart: always
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./db/:/docker-entrypoint-initdb.d/
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
networks:
  proxynet:
    name: custom_network
