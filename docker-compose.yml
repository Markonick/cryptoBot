version: "3"
services:
  binance-ticker:
    container_name: binance-ticker
    build:
      context: .
      dockerfile: ticker/Dockerfile
    volumes:
      - ./ticker:/ticker
      - ./infra:/infra
    restart: always
    ports:
      - "6000:6000"
    networks:
      - proxynet
  # backend:
  #   container_name: backend
  #   build: .
  #   volumes:
  #     - .:/app
  #   # environment:
  #     # DATABASE_URL: ${DATABASE_URL}
  #     # POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  #     # PER_PAGE: ${PER_PAGE}
  #   restart: always
  #   ports:
  #    - "5000:5000"
  #   networks:
  #     - proxynet
  # engine:
  #   container_name: engine
  #   build: .
  #   volumes:
  #     - .:/app
  #   restart: always
  #   ports:
  #    - "4000:4000"
  #   networks:
  #     - proxynet
  # frontend:
  #   container_name: frontend
  #   build: .
  #   volumes:
  #     - .:/app
  #   restart: always
  #   ports:
  #    - "3000:3000"
  #   depends_on:
  #     - backend
  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3.8-management-alpine
    environment:
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}
      RABBITMQ_QUEUE: ${RABBITMQ_QUEUE}
      RABBITMQ_EXCHANGE: ${RABBITMQ_EXCHANGE}
    ports:
        - '5672:5672'
        - '15672:15672'
    networks:
      - proxynet
  # crypto-db:
  #   image: "postgres:13.2-alpine"
  #   restart: always
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./db/:/docker-entrypoint-initdb.d/
  #   environment:
  #     POSTGRES_USER: ${POSTGRES_USER}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
networks:
  proxynet:
    name: custom_network
